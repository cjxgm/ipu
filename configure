#!/usr/bin/perl -w
# vim: ft=perl noet ts=4 sw=4 sts=0




my $CC = "gcc";
my $LD = "gcc";
my $CCFLAGS = "-std=gnu11 -march=native -Ofast -Wall "
			. "-Ilibcrude -Wno-main";
my $LDFLAGS = "-Llibcrude -lcrude -lm";
my $dest = "ipu";
my $test_arg = "./example/bumped-green";
my @libs = qw(elementary);




my @dirs;
my %targets;

sub gen_dep
{
	my ($dir) = @_;
	push @dirs, "build/$dir";
	print "\e[0;32mprocessing \e[0;35m$dir/\n\e[0m";

	for (<$dir/*.c>) {
		print "\e[0;32mprocessing \e[1;35m$_\n\e[1;31m";
		my $deps = `gcc $CCFLAGS -MM "$_"` or die "\e[0m";
		print "\e[0m";
		$deps =~ /^([^:]+):((.|\n)*)\n$/m or die;
		$targets{"build/$dir/$1"} = $2;
	}

	for (<$dir/*/>) {
		s|/$||;
		&gen_dep($_);
	}
}

sub write_makefile
{
	open my $makefile, ">", "makefile" or die;
	print $makefile <<EOF;
# vim: ft=make noet ts=4 sw=4 sts=0

CC = $CC
LD = $LD
CCFLAGS = $CCFLAGS
LDFLAGS = $LDFLAGS

EOF
	print $makefile "CCFLAGS += `pkg-config --cflags $_`\n" for @libs;
	print $makefile "LDFLAGS += `pkg-config --libs   $_`\n" for @libs;
	print $makefile <<EOF;

.PHONY: all clean cleanall rebuild reconf test commit

all: init build/$dest
clean:
	rm -rf build
cleanall: clean
	rm -f makefile
rebuild: clean all
reconf:
	./configure
test: all
	./build/$dest $test_arg
commit: cleanall
	git add .
	git diff --cached
	env LANG=C git commit -a || true
	./configure

init: build @dirs
build:
	mkdir build
EOF
	print $makefile "$_:\n\tmkdir $_\n" for @dirs;
	print $makefile "\n";
	print $makefile "$_:$targets{$_}\n\t\$(CC) -c -o \$@ \$< \$(CCFLAGS)\n" for keys %targets;
	print $makefile <<EOF;
build/$dest: @{[keys %targets]}
	\$(LD) -o \$@ \$^ \$(LDFLAGS)

EOF
	close $makefile
}

&gen_dep("src");
&write_makefile;

